# TEOH KHENG HONG
# TP030562
# Pseudocodes


Begin
    Function string_is_empty(value)
        If value is NULL OR EMPTY
            Return True
        Else
            Return False
        End If
    End Function


    Function get_last_line_of_file(file_name)
        Read file_name
        If file_name File EXISTS:
            Open file_name AS f
                Return f.readlines()[-1]
            Close file_name
        Else
            Return ‘’
        End If
    End Function


    Function get_user_info(username, password)
        Read username, password
        If ‘User.txt’ File EXISTS
            user_file = Open ‘User.txt’
            LOOP line FROM user_file
                If username FOUND AND password NOT FOUND
                    Display "Incorrect Username/password. Please try again."
                    Return []
                Elif username FOUND AND password FOUND
                    Return line
                End If
            End LOOP
            Return []
        Else
            Display "User is not registered"
            Return []
        End If
    End Function


    Function get_username(user_type, default_username)
        Read user_type, default_username
        while True
            Declare default_username
            If default_username
                default_sentence = '(Default ' + user_type + '\'s' + ' username: ' + default_username + ')'
            Else
                default_sentence = ''
            End If
            Display Please enter the ', user_type, '\'s username. ", default_sentence
            Read customer_username
            If string_is_blank(customer_username)
                If default_username
                    customer_username = default_username
                Else
                    Display user_type, '\'s username is empty. Please try again.'
                End If
            Else
                Break
            End If
        End while
        Return customer_username
    End Function

    Function get_user_password(user_type, default_password)
        Read user_type, default_password
         while True
            Declare password, confirm_password
            If default_password
                default_sentence = '(Default ' + user_type + '\'s' + ' password: ' + default_password + ')'
            Else
                default_sentence = ''
            End If
            Display Please enter the ', user_type, '\'s password. ", default_sentence
            Read customer_password
            If string_is_blank(customer_password)
                If default_password
                    customer_password = default_password
                Else
                    Display user_type, '\'s password is empty. Please try again.'
                End If
            Else
                Display 'Confirm the ', user_type, '\'s password: '
                Read confirm_password
                If string_is_blank(confirm_password)
                    Display 'Please try again. Confirm the ', user_type, '\'s password: '
                Else
                    If password != confirm_password
                        Display 'The passwords are not the same. Please enter the details again.'
                    Else
                        Break
                    End If
                End If
            End If
        End while
        Return password
    End Function

    Function get_user_name(user_type)
        Declare user_type, name
        while True
            name = input('Please enter the ' + user_type + '\'s name: ')
            If string_is_blank(name)
                Display user_type, '\'s name is empty.'
            Else
                Break
            End If
        End while
        Return name
    End Function

    Function find_user()
        Declare search_keyword, result_users, selected_user
        Display 'Please enter the customer\'s ID or name: '
        Read search_keyword

        result_users = []
        selected_user = []

        If 'User.txt' File EXISTS
            Open user_file
                LOOP line FROM user_file
                    If search_keyword FOUND
                         result_users.append(line)
                    Else
                        Continue
                    End If
                End LOOP
            Close user_file
        Else
            Display 'No users found.'
        End If

        If result_users
            while True:
                Display 'Here are the search results: \n'

                LOOP index FROM (result_users Array Length):
                    Display index + 1, '. ', result_users[index][0], ' ',
                          result_users[index][3]
                End LOOP
                Declare selection
                Display 'Enter the number to select a user to continue.'
                Read selection

                If selection > (result_users Array Length) or selection < 1:
                    Display 'Invalid selection. Please try again.'

                    Declare selection
                    Display 'Press ENTER to continue. Press q to go back.'
                    Read selection

                    If selection == 'q'
                        Break
                    Else
                        Continue
                    End If
                Else
                    selected_user = result_users[selection - 1]
                    Break
                End If
            End while
        Else
        End If
        return selected_user
    End Function

    Function find_and_display_transactions(user_id)
        Declare user_id, transactions
        transactions = []
        if 'Transaction.txt' File EXISTS
            Declare transaction_file
            Open transaction_file
                LOOP line FROM transaction_file:
                    if user_id Found:
                        transactions.append(line)
                End LOOP
            Close transaction_file
        Else
        End If

        If transactions
            Display 'Here are the customer\'s transactions: \n', 'ID\tOperation\t\tAmount(MYR)'

            LOOP index FROM (transactions Array Length)
                Display transactions[index][0], '\t', transactions[index][2], '\t\t', transactions[index][3]
            End LOOP
        Else
            Display 'No transactions found.'
        End If
    End Function

    Function create_user(username, password, name, user_type)
        Read username, password, name, user_type
        Display 'Saving user info...'

        Declare last_user_line, last_user_info
        last_user_line = get_last_line_of_file('User.txt')

        # Split the last line user info into an array of texts
        last_user_info = last_user_line to Array

        If Not string_is_blank(last_user_info[0]) AND username == last_user_info[1]
            Display 'User is already exist.'
        Else
            If string_is_blank(last_user_info[0])
                existing_user_id = '0'
            Else
                existing_user_id = Extract last_user_info[0]
            End If

            If string_is_blank(last_user_info[0])
                new_user_id = 1
            Else
                new_user_id = existing_user_id + 1
            End If

            Open user_file
                Write user_file
                    'U' + str(new_user_id) + '\t' + username + '\t' + password + '\t' + name + '\t' + user_type + '\n'
                End Write
            Close user_file

            Display 'User saved successfully.'
        End If
    End Function

    Function create_admin_user()
        Declare admin_default_username, admin_default_password
        admin_default_username = 'admin'
        admin_default_password = 'password'

        Display 'An admin user is required for initial usage of this system.'

        admin_username = get_username('admin', admin_default_username)
        admin_password = get_user_password('admin', admin_default_password)
        admin_name = get_user_name('admin')

        create_user(admin_username, admin_password, admin_name, 'Admin')
    End Function

    Function create_customer_user()
        Declare customer_username, customer_password, customer_name
        Display 'Register customer selected.'

        customer_username = get_username('customer', None)
        customer_password = get_user_password('customer', None)
        customer_name = get_user_name('customer')

        create_user(customer_username, customer_password, customer_name, 'Customer')
        Display 'Press ENTER to continue.'
        Read _
    End Function

    Function create_transaction()
        Declare transaction_file, last_transaction_line, last_transaction
        transaction_file = Open File 'Transaction.txt'

        last_transaction_line = get_last_line_of_file('Transaction.txt')

        last_transaction = last_transaction_line to Array
        If string_is_blank(last_transaction[0])
            existing_transaction_id = 0
        Else
            existing_transaction_id = Extract last_transaction[0]
        End If

        existing_transaction_id = existing_transaction_id + 1

        Write transaction_file
            'T', existing_transaction_id, '\t', user_id, '\t', transaction_type, '\t', amount, '\n')
        End Write
    End Function

    Function update_balance(user_id, transaction_type, amount)
        Declare user_id, transaction_type, amount, update_success, withdrawal_eligible
        update_success = False
        withdrawal_eligible = True

        Display 'Saving...'

        Declare empty_file
        If 'Balance.txt' File EXISTS OR 'Balance.txt' File EMPTY
            empty_file = True
        Else
            empty_file = False
        End If

        If empty_file
            If transaction_type == 'Deposit'
                Open 'Balance.txt' as balance_file
                    Write user_id + '\t' + str(amount) + '\n'
                    update_success = True
                Close balance_file
            Else
                withdrawal_eligible = False
            End If
        Else
            Open 'Balance.txt' as balance_file
                Declare balance, balance_file_data, user_balance_line_index

                balance_file_data = Get balance_file Data
                user_balance = []
                user_balance_line_index = -1

                LOOP index FROM (balance_file_data Array Length):
                    stripped_line = Strip balance_file_data[index]
                    If user_id in stripped_line
                        user_balance = stripped_line To Array

                        balance = user_balance[1] to Decimal

                        If transaction_type == 'Deposit'
                            balance = balance + amount
                            user_balance[1] = balance
                        Else
                            If balance < amount
                                withdrawal_eligible = False
                            Else
                                balance = balance - amount
                                user_balance[1] = balance
                            End If
                        Break
                        End If
                    Else
                    End If
                End LOOP
                If user_balance
                    If withdrawal_eligible
                        balance_file_data[user_balance_line_index] = user_balance to String
                        Open 'Balance.txt' as file
                            Write balance_file_data
                        Close file
                        update_success = True
                    Else
                    End If
                Else
                    balance_file = open('Balance.txt', 'a')
                    balance_file.write(user_id + '\t' + str(amount) + '\n')
                    update_success = True
                Else If
            Close balance_file
        End If

        If not withdrawal_eligible
            Display 'You don\'t have that amount of money to withdraw.'
        Else
        End If

        Return update_success
    End Function

    Function login()
        while True
            Declare username
            Display 'Please enter your username: '
            Read username

            If string_is_blank(username)
                Display 'Username is empty.'
                Continue
            Else
                Break
            End If
        End while

        while True
            Declare password
            Display 'Please enter your password: '
            Read password

            If string_is_blank(password)
                Display 'Password is empty.'
                Continue
            Else
                break
            End If
        End while

        user_info = get_user_info(username, password)

        If user_info
            Display 'Welcome, ', user_info[3], ' ', user_info[0]

            If user_info[4] == 'Admin':
                display_admin_menu(user_info)
            Else
                display_customer_menu(user_info)
            End If
        Else
            Display 'User is not registered.'

            Declare selection
            Display 'Press ENTER to continue. Press q to go back.'
            Read selection

            If selection != 'q'
                login()
            Else
            End If
        End If
    End Function

    Function deposit()
        while True
            Try
                Declare amount, update_balance_success
                Display 'Please enter the amount that you want to deposit(MYR): '
                Read amount
                If amount Decimal > 2
                    Declare selection
                    Display 'Currency value not accepted. Press any to try again. Press q to quit.'
                    Read selection

                    If selection != 'q'
                        Continue
                    Else
                        Break
                    Else If
                Else
                    update_balance_success = update_balance(user_info[0], 'Deposit', amount)
                End If


                If update_balance_success
                    create_transaction(user_info[0], 'Deposit', amount)
                    Display 'Deposit successful.'
                Else
                    Display 'Deposit failed.'
                End If
                Break
            Exception ValueError
                Display 'Please enter a number.'
        Display 'Press ENTER to continue.'
        Read _
        End while
    End Function

    Function withdrawal()
        while True
            Try
                Declare amount, update_balance_success
                Display 'Please enter the amount that you want to withdraw(MYR): '
                Read amount

                If amount amount < -2
                    Declare selection
                    Display 'Currency value not accepted. Press any to try again. Press q to quit.'
                    Read selection

                    If selection != 'q'
                        Continue
                    Else
                        Break
                    End If
                Else
                    update_balance_success = update_balance(user_info[0], 'Withdrawal', amount)
                End If

                If update_balance_success
                    create_transaction(user_info[0], 'Withdrawal', amount)
                    Display 'Withdrawal successful.'
                Else
                    Display 'Withdrawal failed.'
                End If

                Display 'Press ENTER to continue.'
                Read _
                Break
            Exception ValueError
                Display 'Please enter a number.'
        End while
    End Function

    Function display_customer_profile(user_info)
        Read user_info
        Display 'Here are the profile details: \n',
              'Username: ', user_info[1], '\n',
              'Name: ', user_info[3], '\n',
              'User Type: ', user_info[4], '\n'
    End Function

    Function view_customer_profile(user_info)
        Read user_info
        Display 'View Customer Profile selected.'
        Declare selected_customer

        if user_info[4] == 'Admin':
            selected_customer = find_user()
            If selected_customer
                display_customer_profile(selected_customer)
            Else
                Display 'No profile displayed.'
            End If
        Else
            display_customer_profile(user_info)
        End If

        Display 'Press ENTER to continue...'
        Read _
    End Function

    Function view_customer_transactions(user_info)
        Read user_info
        Display 'View Customer Transactions selected.'
        Declare selected_customer

        If user_info[4] == 'Admin':
            selected_customer = find_user()

            If selected_customer
                find_and_display_transactions(selected_customer[0])
            Else
                Display 'No transactions displayed.'
            End If
        Else
            find_and_display_transactions(user_info[0])
        End If
        Display 'Press ENTER to continue...'
        Read _
    End Function

    Function display_welcome()
        Display 'Welcome to Online Banking System.'

        while True
            Try
                Declare selection
                Display 'Here are a list that you can perform: \n' +
                                      '1. Login\n' +
                                      '2. About this system\n' +
                                      '3. Exit\n' +
                                      'Enter the number of the functions above to proceed.\n'
                Read selection

                If selection == 1
                    login()
                Elif selection == 2
                    display_about_this_system()
                Elif selection == 3
                    Display 'Thank you for using this system. See you next time!'
                    Break
                Else:
                    Display 'Invalid input. Please try again.'
            Exception ValueError
                Display 'Please enter a number.'
                Continue
        End while
    End Function

    Function display_admin_menu(user_info)
        Read user_info
        while True
            Try
                Declare selection
                Display 'Here are a list that you can perform: \n' +
                                      '1. Create new customer\n' +
                                      '2. View Customer\'s Profile\n' +
                                      '3. View Customer\'s Transactions\n' +
                                      '4. Logout\n' +
                                      'Enter the number of the function to proceed.\n'
                Read selection

                If selection == 1
                    create_customer_user()
                Elif selection == 2
                    view_customer_profile(user_info)
                Elif selection == 3
                    view_customer_transactions(user_info)
                Elif selection == 4
                    Display 'Logged out.'
                    Break
                Else
                    Display 'Invalid input. Please try again.'
                End If
            Exception ValueError
                Display 'Please enter a number.'
                Continue
        End while
    End Function

    Function display_customer_menu(user_info)
        Read user_info
        while True
            Try
                Declare selection
                Display 'Here are a list that you can perform: \n' +
                                      '1. Make Deposit\n' +
                                      '2. Make Withdrawal\n' +
                                      '3. View Own Transactions\n' +
                                      '4. View Own Profile\n' +
                                      '5. Logout\n' +
                                      'Enter the number of the function to proceed.\n'
                Read selection

                If selection == 1
                    deposit(user_info)
                Elif selection == 2
                    withdrawal(user_info)
                Elif selection == 3
                    view_customer_transactions(user_info)
                Elif selection == 4
                    view_customer_profile(user_info)
                Elif selection == 5
                    Display 'Logged out.'
                    Break
                Else
                    Display 'Invalid input. Please try again.'
                End If

            Exception ValueError
                Display 'Please enter a number.'
                Continue
        End while
    End Function

    Function init()
        If 'User.txt' File EXISTS
            Display 'Initialize first time running...'
            Display 'Local data exists.'
        Else
            create_admin_user()
        End If
        display_welcome()
    End Function

End




